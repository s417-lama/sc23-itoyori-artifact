depends:
  - name: massivethreads-dm
    recipe: release
  - name: pcas
    recipe: release
  - name: massivelogger
    recipe: release
  - name: backward-cpp
    recipe: v1.6
  - name: jemalloc
    recipe: v5.3.0
  - name: pcg
    recipe: master
  - name: boost
    recipe: v1.80.0

default_params:
  nodes: 1
  cores:
    - value: 48
      machines: [wisteria-o]
    - value: 76
      machines: [squid-c]
    - value: 6
      machines: [local]
  tree: T1L # T1L/T1XL/T1XXL/T1WL
  repeats: 10
  exec_type: parallel # serial/parallel
  use_vector: 0
  rebuild_tree: 1
  use_win_dynamic: 0
  local_alloc_size: 256
  # common params
  cache_policy: writeback_lazy # serial/nocache/writethrough/writeback/writeback_lazy/writeback_lazy_wl/getput
  dist_policy: cyclic # block/cyclic
  cache_size: 32 # MB
  block_size: 65536 # bytes
  sub_block_size: 4096 # bytes
  max_dirty: $cache_size # MB
  shared_mem: 1
  logger: dummy # dummy/trace/stats
  allocator: sys # sys/jemalloc
  debugger: 0

default_name: uts++
default_queue: node_${nodes}
default_duplicates: 3

batches:
  serial:
    params:
      nodes: 1
      cores: 1
      exec_type: serial
      tree: T1L
      repeats: 11
      cache_policy: [serial, writeback_lazy]
    duplicates: 1
    artifacts:
      - type: stdout
        dest: uts++/${batch_name}/tree_${tree}_p_${cache_policy}_${duplicate}.log
      - type: stats
        dest: uts++/${batch_name}/tree_${tree}_p_${cache_policy}_${duplicate}.stats
      - type: file
        src: mpirun_out.txt
        dest: uts++/${batch_name}/tree_${tree}_p_${cache_policy}_${duplicate}.out

  T1L:
    name: uts++_${batch_name}
    params:
      nodes:
        - value: [1, 2:torus, 2x3:torus, 2x3x2:torus, 3x4x3:torus, 6x6x4:torus, 8x9x8:torus]
          machines: [wisteria-o]
        - value: [1, 2, 4, 8, 16]
          machines: [squid-c]
      tree: T1L
      repeats: 11
      # cache_policy: [nocache, writethrough, writeback, writeback_lazy]
      cache_policy: [nocache, writeback_lazy]
    artifacts:
      - type: stdout
        dest: uts++/${batch_name}/nodes_${nodes}_p_${cache_policy}_${duplicate}.log
      - type: stats
        dest: uts++/${batch_name}/nodes_${nodes}_p_${cache_policy}_${duplicate}.stats
      - type: file
        src: mpirun_out.txt
        dest: uts++/${batch_name}/nodes_${nodes}_p_${cache_policy}_${duplicate}.out

  T1XL:
    name: uts++_${batch_name}
    params:
      nodes:
        - value: [2x3x2:torus, 3x4x3:torus, 6x6x4:torus, 8x9x8:torus]
          machines: [wisteria-o]
      tree: T1XL
      repeats: 11
      cache_policy: [nocache, writeback_lazy]
    artifacts:
      - type: stdout
        dest: uts++/${batch_name}/nodes_${nodes}_p_${cache_policy}_${duplicate}.log
      - type: stats
        dest: uts++/${batch_name}/nodes_${nodes}_p_${cache_policy}_${duplicate}.stats
      - type: file
        src: mpirun_out.txt
        dest: uts++/${batch_name}/nodes_${nodes}_p_${cache_policy}_${duplicate}.out

  sbsize:
    name: uts++_${batch_name}
    params:
      nodes:
        - value: 3x4x3:torus
          machines: [wisteria-o]
      tree: [T1L, T1XL]
      repeats: 11
      cache_policy: writeback_lazy
      sub_block_size: [1, 4, 16, 64, 256, 1024, 4096, 16384, 65536]
    artifacts:
      - type: stdout
        dest: uts++/${batch_name}/tree_${tree}_s_${sub_block_size}_${duplicate}.log
      - type: stats
        dest: uts++/${batch_name}/tree_${tree}_s_${sub_block_size}_${duplicate}.stats
      - type: file
        src: mpirun_out.txt
        dest: uts++/${batch_name}/tree_${tree}_s_${sub_block_size}_${duplicate}.out

build:
  depend_params: [exec_type, rebuild_tree, use_vector, use_win_dynamic, cache_policy, dist_policy, block_size, logger]
  script: |
    source build_common.bash

    CFLAGS="${CFLAGS:+$CFLAGS} -DNDEBUG"
    CFLAGS="${CFLAGS:+$CFLAGS} -DITYR_AUTO_CHECKOUT=false"
    CFLAGS="${CFLAGS:+$CFLAGS} -DITYR_USE_MPI_WIN_DYNAMIC=$KOCHI_PARAM_USE_WIN_DYNAMIC"

    case $KOCHI_PARAM_EXEC_TYPE in
      serial)   CFLAGS="${CFLAGS:+$CFLAGS} -DUTS_RUN_SEQ=1 -DUTS_RECURSIVE_FOR=1" ;;
      parallel) ;;
      *)        echo "Unknown exec type ($KOCHI_PARAM_EXEC_TYPE)"; exit 1 ;;
    esac

    CFLAGS="${CFLAGS:+$CFLAGS} -DUTS_REBUILD_TREE=$KOCHI_PARAM_REBUILD_TREE"
    CFLAGS="${CFLAGS:+$CFLAGS} -DUTS_USE_VECTOR=$KOCHI_PARAM_USE_VECTOR"

    make clean
    MPICXX=$MPICXX CFLAGS=$CFLAGS make uts++.out

run:
  depend_params: [nodes, cores, tree, repeats, local_alloc_size, cache_size, sub_block_size, max_dirty, shared_mem, logger, allocator, debugger]
  script: |
    source run_common.bash

    source uts/sample_trees.sh

    # export OMPI_MCA_common_tofu_num_mrq_entries=2097152 # 2048, 8192, 32768, 131072 (default), 524288, or 2097152
    export PCAS_ALLOCATOR_BLOCK_SIZE=2 # MB
    export PCAS_ALLOCATOR_MAX_UNFLUSHED_FREE_OBJS=10

    export PCAS_ALLOCATOR_MAX_LOCAL_SIZE=$KOCHI_PARAM_LOCAL_ALLOC_SIZE

    commands="
      ./uts++.out
        ${!KOCHI_PARAM_TREE}
        -i $KOCHI_PARAM_REPEATS
        -c $KOCHI_PARAM_CACHE_SIZE
        -s $KOCHI_PARAM_SUB_BLOCK_SIZE"

    n_nodes=$(echo $KOCHI_PARAM_NODES | cut -f 1 -d ":" | sed 's/x/*/g' | bc)

    if [[ $KOCHI_PARAM_DEBUGGER == 0 ]]; then
      ityr_mpirun $((n_nodes * KOCHI_PARAM_CORES)) $KOCHI_PARAM_CORES $commands
    else
      MPIEXEC=mpitx ityr_mpirun $((n_nodes * KOCHI_PARAM_CORES)) $KOCHI_PARAM_CORES gdb --args $commands
    fi

    if [[ $KOCHI_PARAM_LOGGER == trace ]]; then run_trace_viewer; fi
