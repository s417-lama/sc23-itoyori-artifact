depends:
  - name: massivethreads-dm
    recipe: release
  - name: pcas
    recipe: release
  - name: massivelogger
    recipe: release
  - name: backward-cpp
    recipe: v1.6
  - name: jemalloc
    recipe: v5.3.0
  - name: pcg
    recipe: master
  - name: boost
    recipe: v1.80.0

default_params:
  nodes: 1
  cores:
    - value: 48
      machines: [wisteria-o]
    - value: 48
      machines: [local]
  tree: T1L # T1L/T1XL/T1XXL/T1WL
  # repeats: 11
  repeats: 4
  exec_type: parallel # serial/parallel
  # common params
  cache_policy: writeback_lazy # serial/nocache/writethrough/writeback/writeback_lazy/writeback_lazy_wl/getput
  dist_policy: cyclic # block/cyclic
  cache_size: 128 # MB
  block_size: 65536 # bytes
  sub_block_size: 4096 # bytes
  max_dirty: $cache_size # MB
  shared_mem: 1
  logger: dummy # dummy/trace/stats
  allocator: sys # sys/jemalloc
  debugger: 0

default_name: uts

build:
  depend_params: [exec_type, cache_policy, dist_policy, block_size, logger]
  script: |
    source build_common.bash

    CFLAGS="${CFLAGS:+$CFLAGS} -DNDEBUG"

    case $KOCHI_PARAM_EXEC_TYPE in
      serial)   CFLAGS="${CFLAGS:+$CFLAGS} -DUTS_RUN_SEQ=1 -DUTS_RECURSIVE_FOR=1" ;;
      parallel) ;;
      *)        echo "Unknown exec type ($KOCHI_PARAM_EXEC_TYPE)"; exit 1 ;;
    esac

    make clean
    MPICXX=$MPICXX CFLAGS=$CFLAGS make uts.out

run:
  depend_params: [nodes, cores, tree, repeats, cache_size, sub_block_size, max_dirty, shared_mem, logger, allocator, debugger]
  script: |
    source run_common.bash

    source uts/sample_trees.sh

    commands="
      ./uts.out
        ${!KOCHI_PARAM_TREE}
        -i $KOCHI_PARAM_REPEATS
        -c $KOCHI_PARAM_CACHE_SIZE
        -s $KOCHI_PARAM_SUB_BLOCK_SIZE"

    n_nodes=$(echo $KOCHI_PARAM_NODES | cut -f 1 -d ":" | sed 's/x/*/g' | bc)

    if [[ $KOCHI_PARAM_DEBUGGER == 0 ]]; then
      ityr_mpirun $((n_nodes * KOCHI_PARAM_CORES)) $KOCHI_PARAM_CORES $commands
    else
      MPIEXEC=mpitx ityr_mpirun $((n_nodes * KOCHI_PARAM_CORES)) $KOCHI_PARAM_CORES gdb --args $commands
    fi

    if [[ $KOCHI_PARAM_LOGGER == trace ]]; then run_trace_viewer; fi
